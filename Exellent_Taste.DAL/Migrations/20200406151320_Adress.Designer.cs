// <auto-generated />
using System;
using Exellent_Taste.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Exellent_Taste.DAL.Migrations
{
    [DbContext(typeof(ExellentDbContext))]
    [Migration("20200406151320_Adress")]
    partial class Adress
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Exellent_Taste.Models.Adress", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Created_Datum")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Created_Gebruiker_Id")
                        .HasColumnType("int");

                    b.Property<string>("Huisnummer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Land")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Straat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Toevoeging")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated_Datum")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Updated_Gebruiker_Id")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Adress");
                });

            modelBuilder.Entity("Exellent_Taste.Models.Bestellingen", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Created_Datum")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Created_Gebruiker_Id")
                        .HasColumnType("int");

                    b.Property<int>("Tafel")
                        .HasColumnType("int");

                    b.Property<decimal>("Totaal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("Updated_Datum")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Updated_Gebruiker_Id")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Bestellingen");
                });

            modelBuilder.Entity("Exellent_Taste.Models.Bestellingen_Lijst", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Bestelling_Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Datum")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Created_Gebruiker_Id")
                        .HasColumnType("int");

                    b.Property<bool>("Geleverd")
                        .HasColumnType("bit");

                    b.Property<int?>("MenuKaart_Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Datum")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Updated_Gebruiker_Id")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Bestelling_Id");

                    b.HasIndex("MenuKaart_Id");

                    b.ToTable("Bestellingen_Lijst");
                });

            modelBuilder.Entity("Exellent_Taste.Models.BlackList", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Achternaam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created_Datum")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Created_Gebruiker_Id")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Resevering_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated_Datum")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Updated_Gebruiker_Id")
                        .HasColumnType("int");

                    b.Property<string>("Voornaam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("reseveringenID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("reseveringenID");

                    b.ToTable("BlackList");
                });

            modelBuilder.Entity("Exellent_Taste.Models.Gebruikers", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Achternaam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created_Datum")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Created_Gebruiker_Id")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated_Datum")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Updated_Gebruiker_Id")
                        .HasColumnType("int");

                    b.Property<string>("Voornaam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wachtwoord")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Gebruikers");
                });

            modelBuilder.Entity("Exellent_Taste.Models.Menukaart", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Beschrijving")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created_Datum")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Created_Gebruiker_Id")
                        .HasColumnType("int");

                    b.Property<int?>("MenuSoort_id")
                        .HasColumnType("int");

                    b.Property<string>("Naam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Prijs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("Updated_Datum")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Updated_Gebruiker_Id")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MenuSoort_id");

                    b.ToTable("Menukaart");
                });

            modelBuilder.Entity("Exellent_Taste.Models.Menusoort", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Created_Datum")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Created_Gebruiker_Id")
                        .HasColumnType("int");

                    b.Property<int?>("MenuSoortID")
                        .HasColumnType("int");

                    b.Property<string>("Naam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated_Datum")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Updated_Gebruiker_Id")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("MenuSoortID");

                    b.ToTable("Menusoort");
                });

            modelBuilder.Entity("Exellent_Taste.Models.Reseveringen", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Aantal_Personen")
                        .HasColumnType("int");

                    b.Property<string>("Achternaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Adress_id")
                        .HasColumnType("int");

                    b.Property<int>("Bestelling_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created_Datum")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Created_Gebruiker_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gekomen")
                        .HasColumnType("bit");

                    b.Property<int>("Tafel")
                        .HasColumnType("int");

                    b.Property<string>("Telefoonnummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tijd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated_Datum")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Updated_Gebruiker_Id")
                        .HasColumnType("int");

                    b.Property<string>("Voornaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("Adress_id");

                    b.HasIndex("Bestelling_id");

                    b.ToTable("Reseveringen");
                });

            modelBuilder.Entity("Exellent_Taste.Models.Bestellingen_Lijst", b =>
                {
                    b.HasOne("Exellent_Taste.Models.Bestellingen", "bestellingen")
                        .WithMany("Bestellingen_Lijst")
                        .HasForeignKey("Bestelling_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Exellent_Taste.Models.Menukaart", "menukaart")
                        .WithMany("Bestellingen_Lijst")
                        .HasForeignKey("MenuKaart_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Exellent_Taste.Models.BlackList", b =>
                {
                    b.HasOne("Exellent_Taste.Models.Reseveringen", "reseveringen")
                        .WithMany()
                        .HasForeignKey("reseveringenID");
                });

            modelBuilder.Entity("Exellent_Taste.Models.Menukaart", b =>
                {
                    b.HasOne("Exellent_Taste.Models.Menusoort", "menusoort")
                        .WithMany("Menukaarts")
                        .HasForeignKey("MenuSoort_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Exellent_Taste.Models.Menusoort", b =>
                {
                    b.HasOne("Exellent_Taste.Models.Menusoort", "menusoort")
                        .WithMany()
                        .HasForeignKey("MenuSoortID");
                });

            modelBuilder.Entity("Exellent_Taste.Models.Reseveringen", b =>
                {
                    b.HasOne("Exellent_Taste.Models.Adress", "Adress")
                        .WithMany("Reseveringen")
                        .HasForeignKey("Adress_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Exellent_Taste.Models.Bestellingen", "Bestellingen")
                        .WithMany("Reseveringen")
                        .HasForeignKey("Bestelling_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
